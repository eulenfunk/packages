#!/usr/bin/lua
local site = require 'gluon.site'
local util = require 'gluon.util'
local uci = require('simple-uci').cursor()
local iwinfo = require 'iwinfo'

local fileOk = '/tmp/ath9k-ok'
local fileReset = '/tmp/ath9k-reset'
local fileWificonfig = '/etc/config/wireles'

function time2file (file)
  local f = io.open(file, 'w')
  f:write(string.format('%i', os.time()))
  f:close()
end

function devOk (iface)
  local radio = uci:get('wireless', iface, 'device')
  if uci:get_bool('wireless', iface, 'disabled') or uci:get_bool('wireless', radio, 'disabled') then
    return null
  end
  if uci:get('wireless', radio, 'hwmode') ~= '11g' then
    return null
  end

  local ifname = uci:get('wireless', iface, 'ifname')
  local wifitype = iwinfo.type(radio)
  local assoclist = iwinfo[wifitype].assoclist(ifname)
  if next(assoclist) then
    return true
  end
  return false
end

function check_wifi()
  local ok = false
  uci:foreach('wireless', 'wifi-iface',
    function(s)
      ok = ok or devOk(s['.name'])
    end
  )
  return ok
end

if not util.readfile(fileReset) then
  if not util.readfile(fileWificonfig) then
    os.exit(0)
  end
  time2file(fileReset)
end

if check_wifi() or not util.readfile(fileOk) then
  time2file(fileOk)
  os.exit(0)
end

local blackout_wait_secs = site.ath9kblackout.blackoutwait * 60
local reset_wait_secs = site.ath9kblackout.resetwait * 60

if os.difftime(os.time(), tonumber(util.readfile(fileReset))) <= reset_wait_secs then
  os.exit(0)
end

if os.difftime(os.time(), tonumber(util.readfile(fileOk))) <= blackout_wait_secs then
  os.exit(0)
end

io.popen('logger -s -t ath9kblackout -p local0.info "blackout detected, restart wifi"')
time2file(fileReset)
os.execute('wifi down')
os.execute('killall hostapd >/dev/null 2>&1')
os.execute('rm -f /var/run/wifi-*.pid >/dev/null 2>&1')
os.execute('wifi config')
os.execute('wifi up')
